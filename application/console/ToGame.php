<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/15 0015
 * Time: 13:36
 */

namespace app\console;
//命令行核心
//核心
use think\console\Input;
//核心
use think\console\Output;

use app\console\Common;
use \swoole\server;
use Predis\Client;
use think\Config;
use think\Controller;
use think\Session;

class ToGame extends Common
{


    //命令行配置函数
    protected function configure()
    {
        $this->setName('toGame:start')->setDescription('start Web Server Server!');
        //        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected $allNum = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
    protected $BR = ['black', 'red'];
    protected $SD = ['single', 'double'];
    protected $BS = ['big', 'small'];
    protected $num = ['big', 'small'];
    protected $RedImage = ['Hearts', 'Diamonds'];
    protected $BlackImage = ['Spades', 'Clubs'];
    protected $allImage = ['Hearts', 'Diamonds', 'Spades', 'Clubs'];
    protected $bigNum = [8, 9, 10, 11, 12, 13];
    protected $smallNum = [1, 2, 3, 4, 5, 6];
    protected $singleNum = [1, 3, 5, 9, 11, 13];
    protected $doubleNum = [2, 4, 6, 8, 10, 12];
    protected $win = 50;

    protected function execute(Input $input, Output $output)
    {
        //    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 黑桃 方片 梅花
//        $data = [9, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1];
        $data = [9, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1];
        $data = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        $empty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        $max = 100;

        //$checked  //pass
        //$checked  //pass
        $reData = [];
        $checked = $this->check_bet($data, $max);
//        var_dump($checked);
        if (!$checked) {
            $reData['msg'] = 'error';
            return var_dump($reData);
        }

        $uCard = $this->uCard($data);
        $dealCard = $this->getDealCard($empty, 90);
        $winCard = $this->uWin($uCard, $dealCard);
        $reData['winNum'] = $this->contAll($data, $winCard);
        $reData['card'] = $dealCard;
        $reData['msg'] = 'success';

//        var_dump($this->relRandReturn());
//        echo $this->getRandArrayNum($this->win);
//        echo $this->check_rand(90, 1000);
//        echo $this->relRandReturn($this->allNum);
//        var_dump($this->relRandReturn());

        var_dump($reData);

    }

    public function contAll($data, $winCard)
    {
        $value = 0;

        $ans = [
            'BR' => null,   //红黑
            'SD' => null,   //单双
            'BS' => null,   //大小
            'NUM' => null,  //数字
            'FC' => null    //花色
        ];
        //    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 黑桃 方片 梅花
        foreach ($winCard as $key => $item) {
            switch ($key) {
                case 'BR':
                    $item == 'black' ?
                        $value = $value + $data[6] * 2
                        :
                        $value = $value + $data[7] * 2;
                    break;

                case 'SD':
                    $item == 'single' ?
                        $value = $value + $data[4] * 2
                        :
                        $value = $value + $data[5] * 2;
                    break;

                case 'BS':
                    $item == 'big' ?
                        $value = $value + $data[2] * 2
                        :
                        $value = $value + $data[3] * 2;
                    break;

                case 'NUM':
                    $value = $value + $data[1] * 10;
                    break;

                case 'FC':
                    if ($item == 'Hearts') {
                        $value = $value + $data[8] * 3;
                    } elseif ($item == 'Spades') {
                        $value = $value + $data[9] * 3;
                    } elseif ($item == 'Diamonds') {
                        $value = $value + $data[10] * 3;
                    } elseif ($item == 'Clubs') {
                        $value = $value + $data[11] * 3;
                    }
                    break;
            }
        }
        return $value;
    }

    public function uWin($uCard, $dealCard)
    {
        $ans = [];

        $ans = array_intersect_assoc($uCard, $dealCard);
        if (isset($ans['NUM']) && $ans['NUM'] == 7) {
            $ans = [];
            $ans['NUM'] = 7;
        }

        return $ans;
    }

    public function uCard(array $data)
    {
        //    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 黑桃 方片 梅花
//        $ans = [
//            'BR' => null,   //红黑
//            'SD' => null,   //单双
//            'BS' => null,   //大小
//            'NUM' => null,  //数字
//            'FC' => null    //花色
//        ];
        $ans = [];

        if ($data[1] != 0) {
            $ans['NUM'] = 7;
        }

        if ($data[2] > $data[3]) {
            $ans['BS'] = 'big';
        } elseif ($data[2] < $data[3]) {
            $ans['BS'] = 'small';
        }

        if ($data[4] > $data[5]) {
            $ans['SD'] = 'single';
        } elseif ($data[4] < $data[5]) {
            $ans['SD'] = 'double';
        }

        if ($data[6] > $data[7]) {
            $ans['BR'] = 'black';
        } elseif ($data[6] < $data[7]) {
            $ans['BR'] = 'red';
        }

        if ($data[8] > 0) {
            $ans['FC'] = 'Hearts';
        }

        if ($data[9] > 0) {
            $ans['FC'] = 'Spades';
        }

        if ($data[10] > 0) {
            $ans['FC'] = 'Diamonds';
        }

        if ($data[11] > 0) {
            $ans['FC'] = 'Clubs';
        }

        return $ans;
    }

    public function check_bet(array $data, $max)
    {
        if ($data[0] > $max) {
            return false;
        }

        if ($data[0] != $data[1] + $data[2] + $data[3] + $data[4] + $data[5] + $data[6] + $data[7] + $data[8] + $data[9] + $data[10] + $data[11]) {
            return false;
        }

        foreach ($data as $item) {
            if ($item < 0)
                return false;
        }

        return true;
    }

    public function check_rand($win, $number = 100)
    {
        $arr = [];
        for ($i = 0; $i < $number; $i++) {
            $num = $this->getRandArrayNum($win);
            if ($num == 1) {
                array_push($arr, $num);
            }
        }
        return count($arr);
    }

    public function getRandArrayNum($number)
    {
        if ($number > 90 || $number < 20) {
            $number = 50;
        }
        $arr = [];
        $max = 100;
        $ob_arr = [10, 5, 4, 2];
        foreach ($ob_arr as $item) {
            if ($number % $item == 0) {
                $number = $number / $item;
                $max = $max / $item;
                break;
            }
        }
        for ($i = 0; $i < $number; $i++) {
            $arr[$i] = 1;
        }
        for ($i = $number; $i < $max; $i++) {
            $arr[$i] = 0;
        }

        return $this->randArrayValue($arr);
    }


    public function open()
    {
        if (!request()->isAjax()) {
            return json(['msg' => 'request_error']);
        }
        return '';
    }

//    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
    // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 黑桃 方片 梅花
    public function getDealCard(array $data, $win)
    {
        $ans = [
            'BR' => null,   //红黑
            'SD' => null,   //单双
            'BS' => null,   //大小
            'NUM' => null,  //数字
            'FC' => null    //花色
        ];

        //如果未下单
        if ($data[0] == '0') {
            //直接返回随机卡牌
            return $this->relRandReturn();
        }

        //7
        if ($this->randArrayValue($this->allNum) == 7) {
            $ans['NUM'] = 7;
            return $ans;
        }


        if (($data[2] - $data[3]) > 0) {
            $ans['BS'] = $this->CG($this->getRandArrayNum($win), $ans['BS'], 'big', 'small');
        } elseif (($data[2] - $data[3]) < 0) {
            $ans['BS'] = $this->CG($this->getRandArrayNum($win), $ans['BS'], 'small', 'big');
        } elseif (($data[2] - $data[3]) == 0) {
            $ans['BS'] = $this->CG($this->easyRand(), $ans['BS'], 'big', 'small');
        }


        if (($data[4] - $data[5]) > 0) {
            $ans['SD'] = $this->CG($this->getRandArrayNum($win), $ans['SD'], 'single', 'double');
        } elseif (($data[4] - $data[5]) < 0) {
            $ans['SD'] = $this->CG($this->getRandArrayNum($win), $ans['SD'], 'double', 'single');
        } elseif (($data[4] - $data[5]) == 0) {
            $ans['SD'] = $this->CG($this->easyRand(), $ans['SD'], 'double', 'single');
        }


        if (($data[6] - $data[7]) > 0) {
            $ans['BR'] = $this->CG($this->getRandArrayNum($win), $ans['BR'], 'black', 'red');
        } elseif (($data[6] - $data[7]) < 0) {
            $ans['BR'] = $this->CG($this->getRandArrayNum($win), $ans['BR'], 'red', 'black');
        } elseif (($data[6] - $data[7]) == 0) {
            $ans['BR'] = $this->CG($this->easyRand(), $ans['BR'], 'black', 'red');
        }

        $ans['BR'] == 'black' ?
            $ans['FC'] = $this->randArrayValue($this->BlackImage)
            :
            $ans['FC'] = $this->randArrayValue($this->RedImage);

        $ans['NUM'] = $this->NUM($ans);

        return $ans;
    }


    public function relRandReturn()
    {
        $ans = [
            'BR' => null,   //红黑
            'SD' => null,   //单双
            'BS' => null,   //大小
            'NUM' => null,  //数字
            'FC' => null    //花色
        ];

        $ans['NUM'] = $this->randArrayValue($this->allNum);

         if ($ans['NUM'] == 7){
            return $ans;
        }

        if ($ans['NUM'] > 7) {
            $ans['BS'] = 'big';
        } elseif ($ans['NUM'] == 7) {
            $ans['BS'] = null;
        } else {
            $ans['BS'] = 'small';
        }

        $ans['NUM'] % 2 == 0 ?
            $ans['SD'] = 'double'
            :
            $ans['SD'] = 'single';
        $ans['BR'] = $this->randArrayValue($this->BR);

        $ans['BR'] == 'black' ?
            $ans['FC'] = $this->randArrayValue($this->BlackImage)
            :
            $ans['FC'] = $this->randArrayValue($this->RedImage);

        return $ans;
    }

    public function randArrayValue(array $arr)
    {
        $key = array_rand($arr);
        return $arr[$key];
    }

    public function easyRand()
    {
        $arr = [0, 1];
        $key = array_rand($arr);
        return $arr[$key];
    }

    public function CG($randValue, $ans, $bs, $sb)
    {
        $randValue == 1 ?
            $ans = $bs
            :
            $ans = $sb;
        return $ans;
    }

    public function NUM(array $ans)
    {

        if ($ans['BS'] == 'big') {
            $arr_bs = $this->bigNum;
        } else {
            $arr_bs = $this->smallNum;
        }

        if ($ans['SD'] == 'single') {
            $arr_sd = $this->singleNum;
        } else {
            $arr_sd = $this->doubleNum;
        }

        $arr = array_intersect($arr_bs, $arr_sd);

        $ans['NUM'] = $arr[array_rand($arr)];

        return $ans['NUM'];
    }

    public function onStart()
    {

    }

    public function onWorkerStart()
    {


    }

    public function onConnect()
    {

    }


    public function onOpen(\swoole_websocket_server $server, \swoole_http_request $request)
    {
    }


    public function onMessage(\swoole_websocket_server $server, \swoole_websocket_frame $frame)
    {


    }

//指的是客户端关闭
    public function onClose(\swoole_websocket_server $server, $fd)
    {

    }

}