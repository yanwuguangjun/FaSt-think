<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/15 0015
 * Time: 13:36
 */

namespace app\console;
//命令行核心
//核心
use think\console\Input;
//核心
use think\console\Output;

use app\console\Common;
use \swoole\server;
use Predis\Client;
use think\Config;
use think\Controller;
use think\Session;

class ToGame extends Common
{


    //命令行配置函数
    protected function configure()
    {
        $this->setName('toGame:start')->setDescription('start Web Server Server!');
        //        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected $allNum = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
    protected $BR = ['black', 'red'];
    protected $SD = ['single', 'double'];
    protected $BS = ['big', 'small'];
    protected $num = ['big', 'small'];
    protected $RedImage = ['Hearts', 'diamonds'];
    protected $BlackImage = ['spades', 'clubs'];
    protected $allImage = ['Hearts', 'diamonds', 'spades', 'clubs'];
    protected $bigNum = [8, 9, 10, 11, 12, 13];
    protected $smallNum = [1, 2, 3, 4, 5, 6];
    protected $singleNum = [1, 3, 5, 9, 11, 13];
    protected $doubleNum = [2, 4, 6, 8, 10, 12];
    protected $win = 50;

    protected function execute(Input $input, Output $output)
    {
        //    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 方片  黑桃  梅花
        $data = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0];
//        var_dump($this->relRandReturn());
        var_dump($this->getDealCard($data, 25));
//        echo $this->getRandArrayNum($this->win);
//        echo $this->check_rand(90, 1000);
//        echo $this->relRandReturn($this->allNum);
//        var_dump($this->relRandReturn());
    }

    public function check_rand($win, $number = 100)
    {
        $arr = [];
        for ($i = 0; $i < $number; $i++) {
            $num = $this->getRandArrayNum($win);
            if ($num == 1) {
                array_push($arr, $num);
            }
        }
        return count($arr);
    }

    public function getRandArrayNum($number)
    {
        if ($number > 90 || $number < 20) {
            $number = 50;
        }
        $arr = [];
        $max = 100;
        $ob_arr = [10, 5, 4, 2];
        foreach ($ob_arr as $item) {
            if ($number % $item == 0) {
                $number = $number / $item;
                $max = $max / $item;
                break;
            }
        }
        for ($i = 0; $i < $number; $i++) {
            $arr[$i] = 1;
        }
        for ($i = $number; $i < $max; $i++) {
            $arr[$i] = 0;
        }

        return $this->randArrayValue($arr);
    }


//    public function open()
//    {
//        if (!request()->isAjax()) {
//            return json(['msg' => 'request_error']);
//        }
//        return '';
//    }

//    $data = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
    // 下单总金额?  7? 大？ 小？ 单？ 双？ 黑？ 红？ 红桃 方片  黑桃  梅花
    public function getDealCard(array $data, $win)
    {
        $ans = [
            'BR' => null,   //红黑
            'SD' => null,   //单双
            'BS' => null,   //大小
            'NUM' => null,  //数字
            'FC' => null    //花色
        ];

        //如果未下单
        if ($data[0] == '0') {
            //直接返回随机卡牌
            return $this->relRandReturn();
        }

        //如果买了7
        if ($data[1] != 0) {
            if ($this->randArrayValue($this->allNum) == 7) {
                $ans['NUM'] = 7;
                $ans['FC'] = $this->randArrayValue($this->allImage);
                return $ans;
            }
        }

        if ($data[2] != 0 xor $data[3] != 0) {
            $this->BS($this->getRandArrayNum($win), $ans);
        } elseif ($data[2] == 0 && $data[3] == 0) {
            $this->BS($this->easyRand(), $ans);
        }


        if ($data[4] != 0 xor $data[5] != 0) {
            $this->SD($this->getRandArrayNum($win), $ans);
                    return $ans['BS'];

        } elseif ($data[4] == 0 && $data[5] == 0) {
            $this->SD($this->easyRand(), $ans);
        }

        if ($data[6] != 0 xor $data[7] != 0) {
            $this->BR($this->getRandArrayNum($win), $ans);
        } elseif ($data[6] == 0 && $data[7] == 0) {
            $this->SD($this->easyRand(), $ans);
        }

        $ans['BR'] == 'black' ?
            $ans['FC'] = $this->randArrayValue($this->BlackImage)
            :
            $ans['FC'] = $this->randArrayValue($this->RedImage);

        $ans['NUM'] = $this->NUM($ans);

        return $ans;
    }


    public function relRandReturn()
    {
        $ans = [
            'BR' => null,   //红黑
            'SD' => null,   //单双
            'BS' => null,   //大小
            'NUM' => null,  //数字
            'FC' => null    //花色
        ];

        $ans['NUM'] = $this->randArrayValue($this->allNum);

        if ($ans['NUM'] > 7) {
            $ans['BS'] = 'big';
        } elseif ($ans['NUM'] == 7) {
            $ans['BS'] = null;
        } else {
            $ans['BS'] = 'small';
        }

        $ans['NUM'] % 2 == 0 ?
            $ans['SD'] = 'double'
            :
            $ans['SD'] = 'single';
        $ans['BR'] = $this->randArrayValue($this->BR);

        $ans['BR'] == 'black' ?
            $ans['FC'] = $this->randArrayValue($this->BlackImage)
            :
            $ans['FC'] = $this->randArrayValue($this->RedImage);

        return $ans;
    }

    public function randArrayValue(array $arr)
    {
        $key = array_rand($arr);
        return $arr[$key];
    }

    public function easyRand()
    {
        $arr = [0, 1];
        $key = array_rand($arr);
        return $arr[$key];
    }

    protected function BS($randValue, $ans)
    {
        $randValue ?
            $ans['BS'] = 'big'
            :
            $ans['BS'] = 'small';
    }

    protected function SD($randValue, $ans)
    {
        $randValue ?
            $ans['SD'] = 'single'
            :
            $ans['SD'] = 'double';
    }

    protected function BR($randValue, array $ans)
    {
        $randValue ?
            $ans['BR'] = 'black'
            :
            $ans['BR'] = 'red';
    }

    protected function NUM(array $ans)
    {

        if ($ans['BS'] == 'big') {
            $arr_bs = $this->bigNum;
        } else {
            $arr_bs = $this->smallNum;
        }

        if ($ans['SD'] == 'single') {
            $arr_sd = $this->singleNum;
        } else {
            $arr_sd = $this->doubleNum;
        }

        $arr_sd = array_flip($arr_sd);
        $arr_bs = array_flip($arr_bs);

        $ans['NUM'] = array_rand(array_intersect($arr_bs, $arr_sd));

        return $ans['NUM'];
    }

    public function onStart()
    {

    }

    public function onWorkerStart()
    {


    }

    public function onConnect()
    {

    }


    public function onOpen(\swoole_websocket_server $server, \swoole_http_request $request)
    {
    }


    public function onMessage(\swoole_websocket_server $server, \swoole_websocket_frame $frame)
    {


    }

    //指的是客户端关闭
    public function onClose(\swoole_websocket_server $server, $fd)
    {

    }

}